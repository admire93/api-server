# Routes

# Internal API
GET     /                           		controllers.Application.index
GET     /v1/accounts                		controllers.Accounts.list
GET     /v1/account/:id             		controllers.Accounts.findOneById(id: Long)
POST    /v1/account/authenticate      		controllers.Accounts.authenticate(email: String, password: String)
POST    /v1/account                 		controllers.Accounts.add(email: String, name: String, password: String)

GET 	/v1/account/:accId/fiters		 	controllers.Query.findFilters(accId: Long)
POST 	/v1/account/:accId/fiter		 	controllers.Query.addFilter(accId: Long)
GET 	/v1/account/:accId/orders	 		controllers.Query.findOrders(accId: Long)
GET 	/v1/account/:accId/order/:oId 		controllers.Query.getOrder(accId: Long, oId: Long)
POST 	/v1/account/:accId/order 			controllers.Query.addOrder(accId: Long)

# External API
GET     /v1/account/:accId/point/:pId       controllers.Graph.getPoint(accId: Long, pId: Long)
GET     /v1/account/:accId/point 	        controllers.Graph.getPointByTypeOrIdentifier(accId: Long, type: String = "", identifier: String = "", limit: Int = 10, offset: Int = 0)
POST    /v1/account/:accId/point            controllers.Graph.addPoint(accId: Long)

GET 	/v1/account/:accId/edge 			controllers.Graph.findEdges(accId: Long)
POST 	/v1/account/:accId/edge 			controllers.Graph.linkWithEdge(accId: Long)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
